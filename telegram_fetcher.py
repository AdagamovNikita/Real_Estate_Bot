# telegram_fetcher.py
from telethon import TelegramClient, events
from telethon.tl.types import Message
from config import API_ID, API_HASH, TELEGRAM_CHANNEL, RAW_MESSAGES_FILE
import json
import os
import time
import asyncio

# –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å–µ—Å—Å–∏–∏
client = TelegramClient('telegram_session', API_ID, API_HASH)

async def get_messages(limit=5000):
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ Telegram –∫–∞–Ω–∞–ª–∞ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
    messages = []
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –∫–∞–Ω–∞–ª—É
        channel = await client.get_entity(TELEGRAM_CHANNEL)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Ä—Ü–∏—è–º–∏ –ø–æ 100
        offset_id = 0
        while len(messages) < limit:
            print(f"–ü–æ–ª—É—á–µ–Ω–æ {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π...")
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Ä—Ü–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π
            batch = await client.get_messages(channel, limit=100, offset_id=offset_id)
            if not batch:
                break
                
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ—Ä—Ü–∏—é
            for message in batch:
                if isinstance(message, Message) and message.message:
                    messages.append({
                        'message_id': message.id,
                        'date': message.date.isoformat(),
                        'text': message.message
                    })
            
            # –û–±–Ω–æ–≤–ª—è–µ–º offset –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –ø–æ—Ä—Ü–∏–∏
            offset_id = batch[-1].id
            
            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å API
            await asyncio.sleep(1)
            
            if len(batch) < 100:  # –î–æ—Å—Ç–∏–≥–ª–∏ –∫–æ–Ω—Ü–∞ –∏—Å—Ç–æ—Ä–∏–∏
                break
        
        print(f"–í—Å–µ–≥–æ –ø–æ–ª—É—á–µ–Ω–æ {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π")
        return messages
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π: {str(e)}")
        raise

def fetch_messages(limit=5000):
    """–°–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±–µ—Ä—Ç–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π"""
    with client:
        messages = client.loop.run_until_complete(get_messages(limit))
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ñ–∞–π–ª
        with open(RAW_MESSAGES_FILE, 'w', encoding='utf-8') as f:
            json.dump(messages, f, ensure_ascii=False, indent=2)
        print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª {RAW_MESSAGES_FILE}")
        return messages

if __name__ == '__main__':
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ Telegram...")
    fetch_messages() 